#!/usr/bin/env ruby
# upload client for MacOSX
require 'rubygems'
require 'net/http'
require 'uri'
require 'open-uri'
require 'json'

### config
uploader = 'http://localhost:4567/'
#uploader = 'http://shokai.mag.keio.ac.jp/uploader/'

token = 'token' # your token
### config end



### program
if ARGV.size < 1
  puts 'e.g. ruby uploader /path/to/file.png'
  puts 'e.g. ruby uploader /path/to/file.png http://example.com/uploader/'
  puts 'e.g. ruby uploader http://example.com/image.jpg'
  exit 1
end

file = ARGV.shift
uploader = ARGV.shift if ARGV.size > 0

open(file, 'r'){|f|
  bin = f.read
  boundary = '----UPLOADER_BOUNDARY----'
  file_ext = ''
  file_ext = file.split(/\./).last if file =~ /\..+/
  data = <<EOF
--#{boundary}\r
content-disposition: form-data; name="file_ext"\r
\r
#{file_ext}\r
--#{boundary}\r
content-disposition: form-data; name="token"\r
\r
#{token}\r
--#{boundary}\r
content-disposition: form-data; name="data"\r
\r
#{bin}\r
--#{boundary}--\r
EOF
  
  header = {
    'Content-Length' => data.size.to_s,
    'Content-type' => "multipart/form-data; boundary=#{boundary}"
  }

  up = URI.parse(uploader)
  Net::HTTP.start(up.host, up.port) {|http|
    response = http.post(up.path, data, header)
    puts response.body
    p res = JSON.parse(response.body)
    if res['error']
      puts res['error']
      exit 1
    end
    if res['size'].to_i != bin.size
      puts 'file size error!'
      exit 1
    end
    if res['key']
      puts url = "#{uploader}#{res['key']}"
      `echo #{url} | pbcopy`
      `open #{url}`
    end
  }
}
